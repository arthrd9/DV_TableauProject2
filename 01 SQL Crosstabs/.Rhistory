io_df$state <- as.factor(io_df$state)
levels(io_df$state)
#non-investor owned utilities
nonio_df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from electricity_nonio "'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_nm22335', PASS='orcl_nm22335', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
nonio_df["state"] <- nonio_df$"ZIPCODE"
for (x in 1:length(nonio_df$state)) {
if (nonio_df$state[x] >= 99500 && nonio_df$state[x] <= 99999)
{
nonio_df$state[x] <- 'Alaska'
next
}
else if (nonio_df$state[x] >= 35000 && nonio_df$state[x] <= 36999)
{
nonio_df$state[x] <- 'Alabama'
next
}
else if (nonio_df$state[x] >= 71600 && nonio_df$state[x] <= 72999)
{
nonio_df$state[x] <- 'Arkansas'
next
}
else if (nonio_df$state[x] >= 58000 && nonio_df$state[x] <= 86599)
{
nonio_df$state[x] <- 'Arizona'
next
}
else if (nonio_df$state[x] >= 90000 && nonio_df$state[x] <= 96199)
{
nonio_df$state[x] <- 'California'
next
}
else if (nonio_df$state[x] >= 80000 && nonio_df$state[x] <= 81699)
{
nonio_df$state[x] <- 'Colorado'
next
}
else if (nonio_df$state[x] >= 06800 && nonio_df$state[x] <= 06999)
{
nonio_df$state[x] <- 'Connecticut'
next
}
else if (nonio_df$state[x] >= 20001 && nonio_df$state[x] <= 20599)
{
nonio_df$state[x] <- 'Washington DC'
next
}
else if (nonio_df$state[x] >= 19700 && nonio_df$state[x] <= 19999)
{
nonio_df$state[x] <- 'Delaware'
next
}
else if (nonio_df$state[x] >= 32100 && nonio_df$state[x] <= 34999)
{
nonio_df$state[x] <- 'Florida'
}
else if (nonio_df$state[x] >= 30000 && nonio_df$state[x] <= 31999)
{
nonio_df$state[x] <- 'Georgia'
next
}
else if (nonio_df$state[x] >= 96700 && nonio_df$state[x] <= 96899)
{
nonio_df$state[x] <- 'Hawaii'
next
}
else if (nonio_df$state[x] >= 50000 && nonio_df$state[x] <= 52899)
{
nonio_df$state[x] <- 'Iowa'
next
}
else if (nonio_df$state[x] >= 83200 && nonio_df$state[x] <= 83899)
{
nonio_df$state[x] <- 'Idaho'
next
}
else if (nonio_df$state[x] >= 60000 && nonio_df$state[x] <= 62999)
{
nonio_df$state[x] <- 'Illinois'
next
}
else if (nonio_df$state[x] >= 46000 && nonio_df$state[x] <= 47999)
{
nonio_df$state[x] <- 'Indiana'
next
}
else if (nonio_df$state[x] >= 66000 && nonio_df$state[x] <= 64799)
{
nonio_df$state[x] <- 'Kansas'
next
}
else if (nonio_df$state[x] >= 40000 && nonio_df$state[x] <= 42799)
{
nonio_df$state[x] <- 'Kentucky'
next
}
else if (nonio_df$state[x] >= 70000 && nonio_df$state[x] <= 71499)
{
nonio_df$state[x] <- 'Louisiana'
next
}
else if (nonio_df$state[x] >= 01000 && nonio_df$state[x] <= 02799)
{
nonio_df$state[x] <- 'Massachussetts'
next
}
else if (nonio_df$state[x] >= 20600 && nonio_df$state[x] <= 21999)
{
nonio_df$state[x] <- 'Maryland'
next
}
else if (nonio_df$state[x] >= 03000 && nonio_df$state[x] <= 04999)
{
nonio_df$state[x] <- 'Maine'
next
}
else if (nonio_df$state[x] >= 48000 && nonio_df$state[x] <= 49799)
{
nonio_df$state[x] <- 'Michigan'
next
}
else if (nonio_df$state[x] >= 55000 && nonio_df$state[x] <= 56799)
{
nonio_df$state[x] <- 'Minnesota'
next
}
else if (nonio_df$state[x] >= 63000 && nonio_df$state[x] <= 65899)
{
nonio_df$state[x] <- 'Missouri'
next
}
else if (nonio_df$state[x] >= 38600 && nonio_df$state[x] <= 39599)
{
nonio_df$state[x] <- 'Mississippi'
next
}
else if (nonio_df$state[x] >= 59000 && nonio_df$state[x] <= 59999)
{
nonio_df$state[x] <- 'Montana'
next
}
else if (nonio_df$state[x] >= 27000 && nonio_df$state[x] <= 28999)
{
nonio_df$state[x] <- 'North Carolina'
next
}
else if (nonio_df$state[x] >= 58000 && nonio_df$state[x] <= 58899)
{
nonio_df$state[x] <- 'North Dakota'
next
}
else if (nonio_df$state[x] >= 68000 && nonio_df$state[x] <= 69399)
{
nonio_df$state[x] <- 'Nebraska'
next
}
else if (nonio_df$state[x] >= 03000 && nonio_df$state[x] <= 03899)
{
nonio_df$state[x] <- 'New Hampshire'
next
}
else if (nonio_df$state[x] >= 07000 && nonio_df$state[x] <= 08999)
{
nonio_df$state[x] <- 'New Jersey'
next
}
else if (nonio_df$state[x] >= 87000 && nonio_df$state[x] <= 88499)
{
nonio_df$state[x] <- 'New Mexico'
next
}
else if (nonio_df$state[x] >= 89000 && nonio_df$state[x] <= 89899)
{
nonio_df$state[x] <- 'Nevada'
next
}
else if (nonio_df$state[x] >= 10000 && nonio_df$state[x] <= 14999)
{
nonio_df$state[x] <- 'New York'
next
}
else if (nonio_df$state[x] >= 43000 && nonio_df$state[x] <= 45899)
{
nonio_df$state[x] <- 'Ohio'
next
}
else if (nonio_df$state[x] >= 73000 && nonio_df$state[x] <= 74999)
{
nonio_df$state[x] <- 'Oklahoma'
next
}
else if (nonio_df$state[x] >= 97000 && nonio_df$state[x] <= 97999)
{
nonio_df$state[x] <- 'Oregon'
next
}
else if (nonio_df$state[x] >= 15000 && nonio_df$state[x] <= 16999)
{
nonio_df$state[x] <- 'Pennsylvania'
next
}
else if (nonio_df$state[x] >= 00600 && nonio_df$state[x] <= 00799)
{
nonio_df$state[x] <- 'Puerto Rico'
next
}
else if (nonio_df$state[x] >= 02800 && nonio_df$state[x] <= 02999)
{
nonio_df$state[x] <- 'Rhode Island'
next
}
else if (nonio_df$state[x] >= 29000 && nonio_df$state[x] <= 29999)
{
nonio_df$state[x] <- 'South Carolina'
next
}
else if (nonio_df$state[x] >= 57000 && nonio_df$state[x] <= 57799)
{
nonio_df$state[x] <- 'South Dakota'
next
}
else if (nonio_df$state[x] >= 37000 && nonio_df$state[x] <= 35899)
{
nonio_df$state[x] <- 'Tennessee'
next
}
else if (nonio_df$state[x] >= 75000 && nonio_df$state[x] <= 79999)
{
nonio_df$state[x] <- 'Texas'
next
}
else if (nonio_df$state[x] >= 84000 && nonio_df$state[x] <= 84799)
{
nonio_df$state[x] <- 'Utah'
next
}
else if (nonio_df$state[x] >= 20040 && nonio_df$state[x] <= 24658)
{
nonio_df$state[x] <- 'Virginia'
next
}
else if (nonio_df$state[x] >= 5001 && nonio_df$state[x] <= 5907)
{
nonio_df$state[x] <- 'Vermont'
next
}
else if (nonio_df$state[x] >= 98001 && nonio_df$state[x] <= 99403)
{
nonio_df$state[x] <- 'Washington'
next
}
else if (nonio_df$state[x] >= 53001 && nonio_df$state[x] <= 54990)
{
nonio_df$state[x] <- 'Wisconsin'
next
}
else if (nonio_df$state[x] >= 24701 && nonio_df$state[x] <= 26886)
{
nonio_df$state[x] <- 'West Virginia'
next
}
else if (nonio_df$state[x] >= 82001 && nonio_df$state[x] <= 83128)
{
nonio_df$state[x] <- 'Wyoming'
next
}
else if (nonio_df$state[x] >= 962 && nonio_df$state[x] <= 966)
{
nonio_df$state[x] <- 'Armed Forces Pacific'
next
}
else if (nonio_df$state[x] == 969)
{
nonio_df$state[x] <- 'Guam'
next
}
else
{
next
}
}
View(io_df)
View(io_df)
nonio_df$state <- as.factor(nonio_df$state)
levels(nonio_df$state)
myplot <- function(df, x) {
names(df) <- c("x", "count")
ggplot(df, aes(x=x, y=count)) + geom_point() + xlab(x) + theme(axis.text.x=element_text(angle=90, size=7))
}
categoricals_io <- eval(parse(text=substring(getURL(URLencode('http://129.152.144.84:5001/rest/native/?query="select * from electricity_io"'), httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_nm22335', PASS='orcl_nm22335', MODE='native_mode', MODEL='model', returnFor = 'R', returnDimensions = 'True'), verbose = TRUE), 1, 2^31-1)))
l <- list()
for (i in names(io_df)) {
if (i %in% categoricals_io[[1]]) {
a <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select \\\""i"\\\", count(*) n from electricity_io group by \\\""i"\\\" "'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_nm22335', PASS='orcl_nm22335', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', i=i), verbose = TRUE)))
p <- myplot(a,i)
print(p)
l[[i]] <- p
}
}
png("/Users/Syairah/DataVisualization/DV_RProject3/00 Doc/categoricals_io_1.png", width = 25, height = 10, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 12)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:12))
print(l[[2]], vp = viewport(layout.pos.row = 2, layout.pos.col = 1:12))
dev.off()
myplot1 <- function(df, x) {
names(df) <- c("x")
ggplot(df, aes(x=x)) + geom_histogram() + xlab(x) + theme(axis.text.x=element_text(angle=90, size=7))
}
l <- list()
for (i in names(io_df)) {
if (i %in% categoricals_io[[2]]) {
a <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select \\\""i"\\\" from electricity_io where \\\""i"\\\" is not null "'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_nm22335', PASS='orcl_nm22335', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', i=i), verbose = TRUE)))
p <- myplot1(a,i)
print(p)
l[[i]] <- p
}
}
png("/Users/Syairah/DataVisualization/DV_RProject3/00 Doc/categoricals_nonio_2.png", width = 25, height = 10, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 12)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:6))
print(l[[2]], vp = viewport(layout.pos.row = 1, layout.pos.col = 7:12))
print(l[[3]], vp = viewport(layout.pos.row = 2, layout.pos.col = 1:6))
print(l[[4]], vp = viewport(layout.pos.row = 2, layout.pos.col = 7:12))
dev.off()
ij_df <- inner_join(io_df, nonio_df, by = c("ZIPCODE"))
View(ij_df)
foj_df <- full_join(io_df, nonio_df, by = c("ZIPCODE"))
unique_io <- anti_join(io_df, nonio_df, by = c("ZIPCODE"))
unique_nonio <- anti_join(nonio_df, io_df, by = c("ZIPCODE"))
p <- gather(unique_io, "rates", "value", 4:6)
q <- gather(unique_nonio, "rates", "value", 4:6)
ggplot() + geom_violin(data = p, aes(x = rates, y=value), fill = "red", alpha = 0.5) + geom_violin(data = q, aes(x = rates, y=value), fill = "yellow", alpha = 0.5) + coord_flip() + ggtitle('Electricity Rates For Zipcodes With Only Either Investor Owned Utilities or Non-Investor Owned Utilities')
r <- gather(ij_df, "io_rates", "io_value", 4:6)
r <- gather(r, "nonio_rates", "nonio_value", 7:9)
s <- ggplot(r, aes(x=io_rates, y = io_value)) + geom_violin(fill = "red", alpha = 0.5)
s + geom_violin(aes(y=nonio_value), fill = "yellow", alpha = 0.4) + ggtitle('Electricity Rates For Zipcodes With Both Investor Owned Utilities And Non-Investor Owned Utilities')
g <- gather(io_df, "io_rates", "io_value", 4:6)
ggplot(g, aes(x = io_value, y = state, color = state)) + geom_point() + facet_wrap(~io_rates) + geom_jitter() + scale_x_continuous(limits=c(1,300))
)
ggplot(g, aes(x = io_rates, y = io_value, color = io_rates)) + geom_point() + facet_wrap(~state) + geom_jitter() + scale_y_continuous(limits=c(1,300))
h <- gather(nonio_df, "nonio_rates", "nonio_value", 4:6)
ggplot(h, aes(x = nonio_value, y = state, color = state)) + geom_point() + facet_wrap(~nonio_rates) + geom_jitter() + scale_x_continuous(limits=c(1,800))
ggplot(h, aes(x = nonio_rates, y = nonio_value, color = nonio_rates)) + geom_point() + facet_wrap(~state) + geom_jitter() + scale_y_continuous(limits=c(1,800))
h %>% select(ZIPCODE, state, nonio_rates, nonio_value) %>% group_by(state, nonio_rates) %>% summarise(mean_rate = mean(nonio_value)) %>% ggplot(aes(x = state, y=mean_rate, fill = nonio_rates, nonio_rates)) + geom_bar(stat= "identity", position=position_dodge()) + theme(axis.text.x=element_text(angle=90, size=15)) + coord_flip()
g %>% select(ZIPCODE, state, io_rates, io_value) %>% group_by(state, io_rates) %>% summarise(mean_rate = mean(io_value)) %>% ggplot(aes(x = state, y=mean_rate, fill = io_rates, io_rates)) + geom_bar(stat= "identity", position=position_dodge()) + theme(axis.text.x=element_text(angle=90, size=15)) + coord_flip()
?grep
setwd("~/Mine/UT/GitRepositories/DataVisualization/RWorkshop/15 Reformatting Data")
getwd()
file_path <- "Sample - Superstore - English (Extract).csv"
setwd("~/Mine/UT/GitRepositories/DataVisualization/RWorkshop/15 Reformatting Data")
getwd()
file_path <- "Sample - Superstore - English (Extract).csv"
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("RCurl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
setwd("~/Mine/UT/GitRepositories/DataVisualization/RWorkshop/15 Reformatting Data")
getwd()
file_path <- "Sample - Superstore - English (Extract).csv"
measures <- c("Customer_ID", "Discount", "Number_of_Records", "Order_ID", "Order_Quantity", "Product_Base_Margin", "Profit", "Sales", "Shipping_Cost", "Unit_Price" )
df <- read.csv(file_path)
setwd("~/Mine/UT/GitRepositories/DataVisualization/RWorkshop/15 Reformatting Data")
setwd("~DESKTOP/SPRING14/CS29E/DrCannata/DataVisualization/RWorkshop/15 Reformatting Data")
setwd("~/Madeline/desktop/SPRING14/CS29E/DrCannata/DataVisualization/RWorkshop/15 Reformatting Data")
setwd("~/Users/Madeline/Desktop/SPRING14/CS29E/DrCannata/DataVisualization/RWorkshop/15 Reformatting Data")
setwd("/Users/Madeline/Desktop/SPRING14/CS29E/DrCannata/DataVisualization/RWorkshop/15 Reformatting Data")
setwd("~/Mine/UT/GitRepositories/DataVisualization/RWorkshop/15 Reformatting Data")
require("plyr")
require("plyr")
require("grid")
require("RCurl")
require("reshape2")
require("ggplot2")
require("gplots")
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select
CASE
WHEN grouping(job) = 1 THEN \\\'zTotal\\\'
ELSE job END as job_name,
CASE WHEN grouping(dname) = 1 THEN \\\'yTotal\\\'
ELSE dname END as dname, count(*) n
from emp e join dept d on(e.deptno=d.deptno) group by cube (job, dname)"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal', USER='DV_Scott', PASS='orcl', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
spread(df, DNAME, N)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select
CASE
WHEN grouping(job) = 1 THEN \\\'zTotal\\\'
ELSE job END as job_name,
CASE WHEN grouping(dname) = 1 THEN \\\'yTotal\\\'
ELSE dname END as dname, count(*) n
from emp e join dept d on(e.deptno=d.deptno) group by cube (job, dname)"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal', USER='DV_Scott', PASS='orcl', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select
CASE
WHEN grouping(job) = 1 THEN \\\'zTotal\\\'
ELSE job END as job_name,
CASE WHEN grouping(dname) = 1 THEN \\\'yTotal\\\'
ELSE dname END as dname, count(*) n
from emp e join dept d on(e.deptno=d.deptno) group by cube (job, dname)"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal', USER='DV_Scott', PASS='orcl', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)));
tbl_df(df)
spread(df, DNAME, N)
setwd("~/Desktop/SPRING14/CS329E/DV_TableauProject2/01 SQL Crosstabs")
setwd("~/Desktop/SPRING14/CS329E/DV_TableauProject2/01 SQL Crosstabs")
file_path <- "Inpatient_Payment.csv"
measures <- c("Row_ID", "Discount", "Unit_Price", "Shipping_Cost", "Customer_ID", "Product_Base_Margin", "Postal_Code", "Profit", "Quantity_ordered_new", "Sales", "Order_ID")
setwd("~/Desktop/SPRING14/CS329E/DV_TableauProject2/01 SQL Crosstabs")
file_path <- "Inpatient_Payment.csv"
setwd("~/Mine/UT/GitRepositories/DataVisualization/RWorkshop/15 Reformatting Data")
setwd("~/Desktop/SPRING14/CS329E/DrCannata/DataVisualization/RWorkshop/15 Reformatting Data")
file_path <- "Sample - Superstore - English (Extract).csv"
file_path
file_path <- "Sample - Superstore Subset (Excel).csv"
measures <- c("Row_ID", "Discount", "Unit_Price", "Shipping_Cost", "Customer_ID", "Product_Base_Margin", "Postal_Code", "Profit", "Quantity_ordered_new", "Sales", "Order_ID")
df <- read.csv(file_path, stringsAsFactors = FALSE)
names(df) <- gsub("\\.+", "_", names(df))
setwd("~/Desktop/SPRING14/CS329E/DV_TableauProject2/01 SQL Crosstabs")
setwd("~/Desktop/SPRING14/CS329E/DV_TableauProject2/01 SQL Crosstabs")
file_path <- "Gender_Specific_Toy_Preference.csv"
measures <- c("Age", "Gender," "Latitude", "Longitude", "PSAI-m", "PSAI-F", "PSAI-Total", "Mtoy", "Ftoy", "BEM-Masc", "BEM-Fem")
measures <- c("Age", "Gender", "Latitude", "Longitude", "PSAI-m", "PSAI-F", "PSAI-Total", "Mtoy", "Ftoy", "BEM-Masc", "BEM-Fem")
setwd("~/Desktop/SPRING14/CS329E/DV_TableauProject2/01 SQL Crosstabs")
file_path <- "Gender_Specific_Toy_Preference.csv"
measures <- c("Age", "Gender", "Latitude", "Longitude", "PSAI-m", "PSAI-F", "PSAI-Total", "Mtoy", "Ftoy", "BEM-Masc", "BEM-Fem")
df <- read.csv(file_path, stringsAsFactors = FALSE)
View(df)
View(df)
names(df) <- gsub("\\.+", "-", names(df))
View(df)
View(df)
View(df)
measures <- c("Age", "Gender", "Latitude", "Longitude", "PSAI-M", "PSAI-F", "PSAI-Total", "Mtoy", "Ftoy", "BEM-M", "BEM-F")
View(df)
measures <- c("Age", "Gender", "Latitude", "Longitude", "PSAI-m", "PSAI-F", "PSAI-Total", "Mtoy", "Ftoy", "BEM-Masc", "BEM-Fem")
str(df)
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
str(df)
colnames(df)[colnames(df)=="PSAI-m"] <- "PSAI-M"
str(df)
setwd("~/Desktop/SPRING14/CS329E/DV_TableauProject2/01 SQL Crosstabs")
file_path <- "Gender_Specific_Toy_Preference.csv"
measures <- c("Age", "Gender", "Latitude", "Longitude", "PSAI-M", "PSAI-F", "PSAI-Total", "Mtoy", "Ftoy", "BEM-Masc", "BEM-Fem")
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.,0-9]",replacement= ""))
}
setwd("~/Mine/UT/GitRepositories/DataVisualization/RWorkshop/15 Reformatting Data")
setwd("~/Desktop/SPRING14/CS329E/DrCannata/DataVisualization/RWorkshop/15 Reformatting Data")
file_path <- "Sample - Superstore Subset (Excel).csv"
measures <- c("Row_ID", "Discount", "Unit_Price", "Shipping_Cost", "Customer_ID", "Product_Base_Margin", "Postal_Code", "Profit", "Quantity_ordered_new", "Sales", "Order_ID")
df <- read.csv(file_path, stringsAsFactors = FALSE)
names(df) <- gsub("\\.+", "_", names(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
for(d in dimensions) {
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.,0-9]",replacement= ""))
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE)
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
sql <- paste(sql, ");")
cat(sql)
)
setwd("~/Desktop/SPRING14/CS329E/DV_TableauProject2/01 SQL Crosstabs")
file_path <- "Gender_Specific_Toy_Preference.csv"
measures <- c("Age", "Gender", "Latitude", "Longitude", "PSAI-M", "PSAI-F", "PSAI-Total", "Mtoy", "Ftoy", "BEM-Masc", "BEM-Fem")
df <- read.csv(file_path, stringsAsFactors = FALSE)
names(df)
names(df) <- gsub("\\.+", "-", names(df))
names(df)
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE)
names(df) <- gsub("\\.+", "_", names(df))
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE)
names(df)
setwd("~/Desktop/SPRING14/CS329E/DV_TableauProject2/01 SQL Crosstabs")
file_path <- "Gender_Specific_Toy_Preference.csv"
measures <- c("Age", "Gender", "Latitude", "Longitude", "PSAI_M", "PSAI_F", "PSAI_Total", "Mtoy", "Ftoy", "BEM_Masc", "BEM_Fem")
df <- read.csv(file_path, stringsAsFactors = FALSE)
names(df)
names(df) <- gsub("\\.+", "_", names(df))
names(df)
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select * from GENDER_TOYS "
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_map4542', PASS='orcl_map4542', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
test <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select * from GENDER_TOYS "
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_map4542', PASS='orcl_map4542', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
View(test)
toys_df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
+ "select * from GENDER_TOYS "
+ ')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_map4542', PASS='orcl_map4542', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
